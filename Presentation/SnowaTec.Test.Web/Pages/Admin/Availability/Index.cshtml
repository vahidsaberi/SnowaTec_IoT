@page

@using Microsoft.AspNetCore.Identity
@using SnowaTec.Test.Domain.Common
@using SnowaTec.Test.Domain.Entities.Security
@using SnowaTec.Test.Web.Interfaces.Base

@model SnowaTec.Test.Web.Pages.Admin.Availability.IndexModel

@inject ICallApiService _service;
@inject IPermission _permission;

@{
    ViewData["Title"] = "نقش های کاربری";

    var roles = new List<SelectListItem>();

    var token = Request.Cookies["AccessToken"].ToString();

    var result = await _service.Call<List<ApplicationRole>>(token, ApiRoutes.Roles.GetAll, Enums.CallMethodType.Get);

    if (result.Data.Count > 0)
    {
        roles = result.Data.Where(x=>x.Name.ToLower() != "superadmin").Select(x => new SelectListItem { Value = x.Id.ToString(), Text = x.Name }).ToList();
    }
}

@section csss{
    <link rel="stylesheet" rel="stylesheet" href="~/Content/Library/vendors/css/extensions/jstree.min.css" asp-append-version="true">
}

<div class="content-overlay"></div>
<div class="header-navbar-shadow"></div>
<div class="content-wrapper p-0">
    <div class="content-header row">
        @await Component.InvokeAsync("BreadcrumbControl")
    </div>
    <div class="content-body show-container">
        <section id="">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header border-bottom">
                            <h4 class="card-title">مشاهده اطلاعات</h4>
                            <div class="dt-action-buttons text-end">
                                <div class="dt-buttons d-inline-flex">
                                    <button class="dt-button btn btn-outline-secondary me-2 refresh-btn" type="button">
                                        <span>
                                            <i data-feather='rotate-cw'></i>
                                            بروزرسانی
                                        </span>
                                    </button>
                                    @if (await _permission.HasAccess("Availability", Domain.Enum.PermissionType.Create))
                                    {
                                        <button class="dt-button new-btn btn btn-primary" data-pid="" data-type="in-page" type="button">
                                            <span>
                                                <i data-feather='plus'></i>
                                                نقش کاربری جدید
                                            </span>
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="card-body mt-2">
                            <div class="row g-1 mb-md-1">
                                <div class="col-md-4">
                                    <label class="form-label">نام نقش کاربری</label>
                                    <div class="input-group">
                                        <span class="input-group-text" id="inputGroupPrepend">
                                            <i data-feather='search'></i>
                                        </span>
                                        <select id="roleId" class="select2 form-select filterString" data-col-no="3" aria-describedby="inputGroupPrepend">
                                            @foreach (var item in roles)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">نوع رکوردها</label>
                                    <div class="input-group">
                                        <span class="input-group-text" id="inputGroupPrepend">
                                            <i data-feather='filter'></i>
                                        </span>
                                        <select id="recordtype" class="select2 form-select filterString" data-col-no="2" aria-describedby="inputGroupPrepend">
                                            <option value="0">رکوردها</option>
                                            <option value="1">حذف شده ها ( منطقی )</option>
                                            <option value="">رکوردها + حذف شده ها ( منطقی )</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-datatable">

                            <table id="tabledata" class="table">
                                <thead class="table-light">
                                    <tr>
                                        <th></th>
                                        <th>ردیف</th>
                                        <th>حذف</th>
                                        <th>RoleId</th>
                                        <th>نام نقش کاربری</th>
                                        <th>تعداد کاربر</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

@section ScriptsTop{
    <script>
        function callBackAfterNew(response){
            loadSystemPartsData();
        }

        function callBackAfterEdit(response) {
            loadSystemPartsData().then(function(res){
                selectedItemsOfTree($('#Id').val());
            })
        }
    </script>
}

@section scripts{
    <script type="text/javascript" src="~/Content/Library/vendors/js/extensions/jstree.min.js" asp-append-version="true"></script>

    <script>
        var columns =
            [
                {
                    "class": "details-control text-center",
                    "orderable": false,
                    "data": null,
                    render: function (data, type, row, meta) {
                        return '<svg class="cursor-pointer" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>';
                    },
                    "width": 40
                },
                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    },
                    "orderable": true,
                    "width": 50
                },
                {
                    data: 'deleted',
                    visible: false
                },
                {
                    data: 'roleId',
                    visible: false
                },
                {
                    data: 'roleName'
                },
                {
                    data: 'userCount'
                },
                {
                    "class": "text-center",
                    render: function (data, type, row, meta) {
                        var btn = '<div class="text-nowrap">';
                        if ('@await _permission.HasAccess("Availability", Domain.Enum.PermissionType.Update)' == 'True')
                        {
                            btn += '<i class="mx-1 float-start cursor-pointer oicon2-pen edit-btn" data-type="in-page" data-id="' + row.roleId + '"></i>';
                        }
                        btn += row.deleted === true ? '<i class="mx-1 float-start cursor-pointer oicon-recycle undelete-btn-show" data-id="' + row.roleId + '" data-name=" ' + row.roleName + '"></i>' : '';
                        if ('@await _permission.HasAccess("Availability", Domain.Enum.PermissionType.Delete)' == 'True') {
                            btn += '<i class="mx-1 float-start cursor-pointer oicon-trash-can delete-btn-show" data-id="' + row.roleId + '" data-name=" ' + row.roleName + '"></i>';
                        }
                        btn += '</div>';

                        return btn;
                    },
                    "orderable": false,
                    "width": 200
                }
            ];

        function format(data) {
            return '<div class="detail"> نام نقش کاربری: ' + data.roleName + '</div>';
        }

        createDatatable('tabledata', columns, format);

        function loadSystemPartsData() {

            const done = jQuery.Deferred();

            callAjax('SystemParts', AjaxType.Get, {}, null, 'html').then(function (response) {
                createTree(response);

                done.resolve(response);
            });

            return done.promise();
        }

        var tree;

        function createTree(response) {
            $('#availability').html(response);
            tree = $('#jstree-SystemPart');
            if (tree.length) {
                tree.jstree({
                    core: {
                        check_callback: true,
                    },
                    "checkbox": {
                        "keep_selected_style": false
                    },
                    plugins: ['types', 'checkbox', 'wholerow'],
                    types: {
                        default: {
                            icon: 'oicon2-folder-1'
                        },
                        Group: {
                            icon: 'oicon2-layers'
                        },
                        Menu: {
                            icon: 'oicon2-th-list'
                        },
                        Access: {
                            icon: 'oicon2-lock-filled'
                        }
                    }
                });
            }
        }

        function selectedItemsOfTree(roleId) {
            callAjax('Licenses', AjaxType.Get, { roleId }).then(function (response) {
                $.each(response, function (i, v) {
                    //$('#jstree-SystemPart').jstree(true).select_node(v);
                    $('#jstree-SystemPart').jstree('select_node', v);
                    //$.jstree.reference('#jstree-SystemPart').select_node(v);
                });
            });
        }

        function addDataForSave(formdata) {
            //var checked_ids = $('#jstree-SystemPart').jstree("get_undetermined", false);
            //checked_ids.push(...$('#jstree-SystemPart').jstree("get_selected", false));

            var UndeterminedLicenses = $('#jstree-SystemPart').jstree("get_undetermined", false);

            var SelectedLicenses = $('#jstree-SystemPart').jstree("get_selected", false);

            formdata += '&SelectedLicenses=' + SelectedLicenses + '&UndeterminedLicenses=' + UndeterminedLicenses;

            return formdata;
        }
    </script>
}